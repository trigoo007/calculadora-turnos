#!/usr/bin/env python3
"""
Prueba r√°pida de funcionalidad de duplas
"""

import pandas as pd
import sys
import os

def main():
    print("üîç PRUEBA R√ÅPIDA: ESTIMADOR DE DUPLAS")
    print("="*40)
    
    try:
        # Importar el m√≥dulo
        from calculadora_turnos import CalculadoraTurnos
        print("‚úÖ M√≥dulo importado")
        
        # Crear instancia
        calc = CalculadoraTurnos()
        print("‚úÖ Instancia creada")
        
        # Verificar m√©todo
        if hasattr(calc, 'estimar_dias_turno'):
            print("‚úÖ M√©todo estimar_dias_turno encontrado")
        else:
            print("‚ùå M√©todo NO encontrado")
            return
        
        # Datos de prueba simples
        datos = pd.DataFrame({
            'Fecha del procedimiento programado': [
                '08/05/2024', '08/05/2024', '08/05/2024', '08/05/2024', '08/05/2024',  # 5 ex√°menes - DUPLA d√≠a 1
                '09/05/2024', '09/05/2024', '09/05/2024', '09/05/2024', '09/05/2024', '09/05/2024',  # 6 ex√°menes - DUPLA d√≠a 2
                '15/05/2024', '15/05/2024', '15/05/2024', '15/05/2024',  # 4 ex√°menes - DUPLA d√≠a 1
                '16/05/2024', '16/05/2024', '16/05/2024', '16/05/2024', '16/05/2024',  # 5 ex√°menes - DUPLA d√≠a 2
                '22/05/2024', '22/05/2024',  # 2 ex√°menes - d√≠a individual
            ],
            'Nombre del procedimiento': [f'Proc_{i}' for i in range(1, 18)]
        })
        
        print(f"‚úÖ Datos creados: {len(datos)} registros")
        
        # Ejecutar estimaci√≥n
        print("\nü§ñ Ejecutando estimaci√≥n...")
        resultado = calc.estimar_dias_turno(datos)
        
        print(f"\nüìã RESULTADO: {len(resultado)} turnos detectados")
        
        if resultado:
            for i, (fecha, examenes) in enumerate(resultado, 1):
                print(f"  {i}. {fecha} - {examenes} ex√°menes")
                
            # Verificar l√≠mites
            if 2 <= len(resultado) <= 6:
                print(f"‚úÖ L√≠mites OK: {len(resultado)} turnos (2-6)")
            else:
                print(f"‚ùå L√≠mites violados: {len(resultado)} turnos")
        else:
            print("‚ùå Sin resultados")
            
    except Exception as e:
        print(f"‚ùå ERROR: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
